{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/modalActions.js","actions/taskActions.js","actions/authActions.js","hooks/useForm.js","pages/LoginView.js","routers/PublicRoute.js","componets/Navbar.js","routers/PrivateRoute.js","componets/Header.js","utils/constants.js","componets/modal.js","componets/Task.js","componets/TasksList.js","pages/HomeView.js","pages/RegisterView.js","routers/AppRouter.js","reducers/authRedecer.js","reducers/taskReducer.js","reducers/modalReducer.js","reducers/rootReducer.js","redux/storeRedux.js","App.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","hideModal","type","taskAddNew","task","payload","taskUpdated","taskDeleted","id","taskLoaded","tasks","startLogout","dispatch","clear","logout","checkingFinish","login","user","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginView","email","password","form","setForm","useDispatch","className","src","alt","onSubmit","e","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","console","log","startLogin","htmlFor","autoComplete","onChange","to","PublicRoute","isAuthenticated","Component","component","rest","props","Navbar","useSelector","state","authReducer","onClick","PrivateRoute","location","pathname","Header","colors","etiquetas","Modal","colorsContainer","useRef","tagsContainer","handleColorSelected","Array","from","document","querySelectorAll","map","c","style","border","handleEtiquetaSelected","removeAttribute","container","current","filter","img","getAttribute","toString","color","children","div","background","getSeletedColor","dataForm","completed","getState","_id","ref","placeholder","required","cols","rows","eti","icono","Task","title","description","date","time","taskElement","loadingRef","checked","taskRef","querySelector","display","taskStartUpdate","split","TasksList","taskReducer","checking","useEffect","tasksList","HomeView","showModal","store","modalReducer","visible","RegisterView","password2","startRegister","AppRouter","exact","path","action","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"gOAAMA,EAAUC,4BAEVC,EAAgB,SAACC,EAAUC,GAAuB,IAAlBC,EAAiB,uDAAV,MACrCC,EAAG,UAAKN,EAAL,YAAgBG,GACzB,MAAY,QAATE,EACQE,MAAMD,GAENC,MAAMD,EAAK,CACdD,SACAG,QAAQ,CACJ,eAAe,oBAEnBC,KAAMC,KAAKC,UAAUP,MAKzBQ,EAAgB,SAACT,EAAUC,GAAuB,IAAlBC,EAAiB,uDAAV,MACrCC,EAAG,UAAKN,EAAL,YAAgBG,GACnBU,EAAQC,aAAaC,QAAQ,UAAY,GAC/C,MAAY,QAATV,EACQE,MAAMD,EAAI,CACdD,SACAG,QAAS,CACL,UAAWK,KAIXN,MAAMD,EAAK,CACdD,SACAG,QAAQ,CACJ,eAAe,mBACf,UAAWK,GAEfJ,KAAMC,KAAKC,UAAUP,MChClBY,EAKE,2BALFA,EAOC,iBAPDA,EAQG,sBARHA,EASG,sBATHA,EAUE,sBAVFA,EAYU,qCAZVA,EAcC,eAdDA,EAiBE,gBAjBFA,EAmBA,qBAnBAA,EAoBA,qBChBAC,EAAY,iBAAO,CAC5BC,KAAMF,ICmBJG,EAAa,SAACC,GAAD,MAAW,CAC5BF,KAAMF,EACNK,QAASD,IAwBLE,EAAc,SAACF,GAAD,MAAW,CAC7BF,KAAMF,EACNK,QAASD,IAoBLG,EAAc,SAACC,GAAD,MAAS,CAC3BN,KAAMF,EACNK,QAAQ,CAACG,QAgBLC,EAAa,SAACC,GAAD,MAAY,CAC7BR,KAAMF,EACNK,QAASK,ICxCEC,EAAc,WACzB,OAAO,SAACC,GACNd,aAAae,QACbD,EAASE,KACTF,EDuC6B,CAC/BV,KAAMF,MCpCFe,EAAiB,iBAAO,CAC5Bb,KAAMF,IAGFgB,EAAQ,SAACC,GAAD,MAAW,CACvBf,KAAMF,EACNK,QAASY,IAGLH,EAAS,iBAAO,CACpBZ,KAAMF,I,eCtDOkB,EAhBC,WAAsB,IAArBC,EAAoB,uDAAL,GAAK,EAELC,mBAASD,GAFJ,mBAE1BE,EAF0B,KAElBC,EAFkB,KAI3BC,EAAQ,WACVD,EAAUH,IAERK,EAAoB,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACxBH,EAAU,2BACHD,GADE,kBAEJI,EAAOC,KAAOD,EAAOE,UAG9B,MAAO,CAACN,EAAQG,EAAmBD,I,OCwBxBK,EAjCG,WAAO,IAAD,EACIV,EAAQ,CAC5BW,MAAM,oBACNC,SAAS,YAHO,mBACbC,EADa,KACPC,EADO,KAKdpB,EAAWqB,cAEVJ,EAAmBE,EAAnBF,MAAOC,EAAYC,EAAZD,SAOd,OACI,sBAAKI,UAAU,QAAf,UACI,qBAAKC,IAAI,uBAAuBC,IAAI,SACpC,uCACA,uBAAMC,SATS,SAACC,GACpBA,EAAEC,iBAEF3B,EFdkB,SAAEiB,EAAOC,GAEjC,8CAAO,WAAOlB,GAAP,iBAAA4B,EAAA,sEACctD,EAAc,OAAQ,CAAE2C,QAAOC,YAAY,QADzD,cACCW,EADD,gBAEcA,EAAKC,OAFnB,QAECjD,EAFD,QAGIkD,IAEP7C,aAAa8C,QAAQ,QAASnD,EAAKI,OACnCC,aAAa8C,QAAQ,mBAAmB,IAAIC,MAAOC,WACnDlC,EACII,EAAM,CAAE+B,IAAKtD,EAAKsD,IAAKrB,KAAMjC,EAAKiC,SAIpCsB,QAAQC,IAAIxD,GAZX,2CAAP,sDEYgByD,CAAWrB,EAAOC,KAMQI,UAAU,YAA1C,UAEI,uBAAOiB,QAAQ,QAAf,mBACA,uBAAOjD,KAAK,QAAQwB,KAAK,QAAQ0B,aAAa,MAAMC,SAAUrB,EAASL,MAAOE,IAE9E,uBAAOsB,QAAQ,QAAf,sBACA,uBAAOjD,KAAK,WAAWwB,KAAK,WAAW0B,aAAa,MAAMC,SAAUrB,EAASL,MAAOG,IAEpF,2CACA,oBAAGI,UAAU,eAAb,gBAA+B,cAAC,IAAD,CAAMoB,GAAG,WAAT,yC,QC7BlCC,EAAc,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,gBAA0BC,EAAuB,EAAjCC,UAAuBC,EAAU,+CAE1E,OACG,cAAC,IAAD,2BAAWA,GAAX,IAAiBD,UAAW,SAACE,GAAD,OACvBJ,EAAkB,cAAC,IAAD,CAAUF,GAAG,MAAQ,cAACG,EAAD,eAAeG,SCYnDC,EAhBA,WACd,IAAMjD,EAAWqB,cACVP,EAAQoC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,eAAnCtC,KAMJ,OACI,sBAAKQ,UAAU,OAAf,UACQ,cAAC,IAAD,CAAMoB,GAAG,SAASW,QANZ,WAClBrD,EAASD,MAKG,4BADR,gBAEYe,MCTPwC,EAAe,SAAC,GAAmD,IAAlDV,EAAiD,EAAjDA,gBAA0BC,EAAuB,EAAjCC,UAAuBC,EAAU,+CAI3E,OAFA7D,aAAa8C,QAAQ,WAAWe,EAAKQ,SAASC,UAGtC,qCACG,cAAC,EAAD,IACC,cAAC,IAAD,2BAAWT,GAAX,IAAiBD,UAAW,SAACE,GAAD,OACvBJ,EAAkB,cAACC,EAAD,eAAeG,IAAY,cAAC,IAAD,CAAUN,GAAG,mBCGhEe,EAbA,WACX,IAAMzD,EAAWqB,cAIjB,OACI,mCACI,uCACA,wBAAQC,UAAU,UAAU+B,QANP,WACzBrD,ERLwB,CAC9BV,KAAMF,KQSI,qBCVCsE,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAC9E,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,WAE/BC,EAAY,CAAC,QAAQ,OAAO,OAAO,WC6EjCC,EA5ED,WAAO,IAAD,EAEQtD,IAFR,mBAETa,EAFS,KAEHC,EAFG,KAGVyC,EAAkBC,iBAAO,MACzBC,EAAgBD,iBAAO,MACvB9D,EAAWqB,cACNhB,EAAS6C,aAAY,SAAAC,GAAK,OAAGA,EAAMC,eAAvCjB,IAOD6B,EAAsB,SAAC,GAAY,IAAXnD,EAAU,EAAVA,OAJ1BoD,MAAMC,KAAKC,SAASC,iBAAiB,WAAWC,KAAI,SAAAC,GAChD,OAAOA,EAAEC,MAAMC,OAAS,UAK5B3D,EAAO0D,MAAMC,OAAQ,uBAEnBC,EAAyB,SAAC,GAAY,IAAX5D,EAAU,EAAVA,OAC5BA,EAAO0D,MAAMC,OAEd3D,EAAO6D,gBAAgB,SADvB7D,EAAO0D,MAAMC,OAAQ,uBAsBzB,OACI,qBAAKlD,UAAU,QAAf,SACI,qBAAKA,UAAU,aAAf,SACI,uBAAM1B,GAAG,YAAY6B,SAfX,SAACC,GACnBA,EAAEC,iBAEF,IAVsBgD,ETxBEnF,ESkClBmE,GAVgBgB,EAUaZ,EAAca,QAT1CX,MAAMC,KAAKS,EAAUP,iBAAiB,QAAQS,QAAO,SAAAC,GAAG,MAAuB,KAArBA,EAAIP,MAAMC,UAAeH,KAAI,SAAAS,GAAG,OAAIA,EAAIC,aAAa,YAAUC,YAU1HC,EAPc,SAAEN,GAAc,IAAD,EACnC,iBAAOV,MAAMC,KAAKS,EAAUO,UAAUL,QAAO,SAAAM,GAAG,MAAuB,SAArBA,EAAIZ,MAAMC,QAA0C,KAArBW,EAAIZ,MAAMC,UAAe,UAA1G,aAAO,EAAuGD,MAAMa,WAMtGC,CAAiBxB,EAAgBe,UAAY,UACrDU,EAAQ,2BAAOnE,GAAP,IAAYwC,YAAWsB,QAAMM,WAAU,EAAOlF,SAE5DL,GTtCwBR,ESsCE8F,ETrChC,uCAAO,WAAOtF,EAAUwF,GAAjB,uBAAA5D,EAAA,+DACiB4D,IAAWpC,YAAzBjB,EADH,EACGA,IAAKrB,EADR,EACQA,KACbd,EAASX,KAFJ,kBAIgBL,EAAc,QAASQ,EAAM,QAJ7C,cAIGqC,EAJH,gBAKgBA,EAAKC,OALrB,QAKGjD,EALH,QAMMkD,KACPvC,EAAKiG,IAAM5G,EAAKW,KAAKiG,IACrBjG,EAAKa,KAAO,CACVoF,IAAKtD,EACLrB,QAEFd,EAAST,EAAWC,KAZnB,kDAeH4C,QAAQC,IAAR,MAfG,0DAAP,2DS6Cc,UACI,sBAAKf,UAAU,eAAf,UACI,oBAAIA,UAAU,cAAd,sBACA,qBAAKA,UAAU,SAASoE,IAAK7B,EAA7B,SACKH,EAAOW,KAAI,SAAAY,GAAK,OAAE,qBAAiB5B,QAASW,EAAqB1C,UAAU,QAAQiD,MAAO,CAACa,WAAYH,IAA3EA,WAGjC,uBAAO3F,KAAK,SAASwB,KAAK,QAAQ2B,SAAUrB,IAC5C,uBAAO9B,KAAK,SAASwB,KAAK,YAAY2B,SAAUrB,IAChD,uBAAO9B,KAAK,OAAOqG,YAAY,cAAc7E,KAAK,QAAQ2B,SAAUrB,EAASwE,UAAQ,IACrF,uBAAOtG,KAAK,OAAOwB,KAAK,OAAO8E,UAAQ,EAACnD,SAAUrB,IAClD,uBAAO9B,KAAK,OAAOwB,KAAK,OAAO8E,UAAQ,EAACnD,SAAUrB,IAClD,0BAAUN,KAAK,cAAclB,GAAG,GAAGiG,KAAK,KAAKC,KAAK,IAAIH,YAAY,cAAclD,SAAUrB,EAASwE,UAAQ,IAC3G,sBAAKtE,UAAU,mBAAmBoE,IAAK3B,EAAvC,UACI,oBAAIzC,UAAU,YAAd,sBAECqC,EAAUU,KAAI,SAAA0B,GAAG,OAAK,qBAAezE,UAAU,MAAzB,SACK,qBAAK0E,MAAOD,EAAKxE,IAAG,qBAAgBwE,EAAhB,QAA2B1C,QAASoB,EAAwBjD,IAAI,MAD/EuE,SAMrC,sBAAKzE,UAAU,aAAf,UACI,wBAAQ+B,QA5BP,kBAAIrD,EAASX,MA4BqBC,KAAK,SAASgC,UAAU,aAA3D,oBACA,wBAAQA,UAAU,WAAlB,6BC5Bb2E,EA1CF,SAAC,GAAgF,IAAD,IAA9EzG,KAAOiG,EAAuE,EAAvEA,IAAIR,EAAmE,EAAnEA,MAAMtB,EAA6D,EAA7DA,UAAUuC,EAAmD,EAAnDA,MAAMC,EAA6C,EAA7CA,YAAYC,EAAiC,EAAjCA,KAAKC,EAA4B,EAA5BA,KAAKd,EAAuB,EAAvBA,UAAa/F,EAAU,EAAVA,KAEzEQ,EAAWqB,cACXiF,EAAcxC,iBAAO,MACrByC,EAAazC,iBAAO,MAU1B,OACI,sBAAK4B,IAAKY,EAAahF,UAAU,OAAOiD,MAAO,CAACa,WAAYH,GAA5D,UACgB,sBAAK3D,UAAU,SAAf,UACI,uBAAMA,UAAU,OAAhB,UAAwB8E,EAAxB,MAAiCC,KACjC,wBAAO/E,UAAU,SAAjB,UACI,uBAAOhC,KAAK,WAAWkH,QAASjB,EAAW9C,SAT3C,WACxBzC,EVgBuB,SAACR,EAAKiH,GAInC,OAFAA,EAAQ7B,QAAQ8B,cAAc,YAAYnC,MAAMoC,QAAU,UAE1D,uCAAO,WAAO3G,GAAP,iBAAA4B,EAAA,+EAEgB5C,EAAc,SAAD,OAAUQ,EAAKiG,KAAOjG,EAAM,OAFzD,cAEGqC,EAFH,gBAGgBA,EAAKC,OAHrB,QAGGjD,EAHH,QAIMkD,IACP/B,EAASN,EAAYF,IACrBiH,EAAQ7B,QAAQ8B,cAAc,YAAYnC,MAAMoC,QAAU,QAE1DvE,QAAQC,IAAIxD,GARX,kDAWHuD,QAAQC,IAAR,MAXG,0DAAP,sDUpBgBuE,CAAgB,2BAAIpH,GAAL,IAAU+F,WAAWA,IAAWe,OASjC,sBAAMhF,UAAU,uBAGxB,sBAAKA,UAAU,OAAf,UACI,oBAAIA,UAAU,QAAd,SAAuB4E,IACvB,mBAAG5E,UAAU,cAAb,SAA4B6E,OAEhC,sBAAK7E,UAAU,SAAf,UACI,qBAAKA,UAAU,YAAf,SAEQqC,EAAUkD,MAAM,KAAKxC,KAAI,SAAA3C,GAAC,OAAE,qBAAaJ,UAAU,WAAvB,SAAkC,qBAAKA,UAAU,cAAcC,IAAG,qBAAgBG,EAAhB,QAAyBF,IAAI,MAArFE,QAG9C,wBAAQJ,UAAU,aAAa+B,QA3B9B,WV8CE,IAAEzD,EU7CzB2G,EAAW3B,QAAQL,MAAMoC,QAAU,UACnC3G,GV4CyBJ,EU5CE6F,EV6CjC,uCAAO,WAAOzF,GAAP,iBAAA4B,EAAA,+EAGgB5C,EAAc,SAAD,OAAUY,GAAM,GAAI,UAHjD,cAGGiC,EAHH,gBAIgBA,EAAKC,OAJrB,QAIGjD,EAJH,QAKMkD,GACL/B,EAASL,EAAYC,IAEvBwC,QAAQC,IAAIxD,GARX,kDAWHuD,QAAQC,IAAR,MAXG,0DAAP,yDUpB0B,SACI,qBAAKf,UAAU,cAAcC,IAAI,wBAAwBC,IAAI,UAGrE,qBAAKkE,IAAKa,EAAYjF,UAAU,UAAhC,2BCjBTwF,EApBG,WAEd,IAAM9G,EAAWqB,cAFG,EAGM6B,aAAY,SAAAC,GAAK,OAAEA,EAAM4D,eAA5CjH,EAHa,EAGbA,MAAOkH,EAHM,EAGNA,SAMd,OALAC,qBAAU,WACNjH,EXsEN,uCAAO,WAAOA,GAAP,mBAAA4B,EAAA,+EAEgB5C,EAAc,SAF9B,cAEG6C,EAFH,gBAGgBA,EAAKC,OAHrB,OAGGjD,EAHH,OAIGiB,EAAQjB,EAAKqI,UACnBlH,EAASH,EAAWC,IALjB,kDAOHsC,QAAQC,IAAR,MAPG,0DAAP,yDWrEK,CAACrC,IAIA,yBAASsB,UAAU,YAAnB,SACQ,sBAAKA,UAAU,OAAf,UACKxB,EAAM,GAAKA,EAAMuE,KAAI,SAAA7E,GAAI,OAAG,cAAC,EAAD,CAAqBA,KAAMA,GAAhBA,EAAKiG,QAAqB,mBAAGnE,UAAU,YAAb,sCACjE0F,GAAY,uDCGlBG,EAfE,SAAAnE,GAAU,IAERoE,EAAalE,aAAY,SAAAmE,GAAK,OAAEA,EAAMC,gBAA9CC,QAEP,OACI,qCACI,oCACI,cAAC,EAAD,IACA,cAAC,EAAD,OAEHH,GAAa,cAAC,EAAD,QCmCXI,EA7CM,WAAO,IAAD,EACClH,EAAQ,CAC5BQ,KAAK,GACLG,MAAM,GACNC,SAAS,GACTuG,UAAU,KALS,mBAChBtG,EADgB,KACVC,EADU,KAOjBpB,EAAWqB,cAETP,EAAqCK,EAArCL,KAAMG,EAA+BE,EAA/BF,MAAOC,EAAwBC,EAAxBD,SAAUuG,EAActG,EAAdsG,UAO/B,OACI,sBAAKnG,UAAU,WAAf,UACI,qBAAKC,IAAI,uBAAuBC,IAAI,SACpC,0CACA,uBAAMC,SATS,SAACC,GACpBA,EAAEC,iBACFT,IAAauG,GAAazH,EZIL,SAAEiB,EAAOC,EAAUJ,GAE9C,8CAAO,WAAMd,GAAN,iBAAA4B,EAAA,sEACctD,EAAc,WAAY,CAAEwC,OAAMG,QAAOC,YAAY,QADnE,cACCW,EADD,gBAEcA,EAAKC,OAFnB,QAECjD,EAFD,QAGIkD,IACP7C,aAAa8C,QAAQ,QAASnD,EAAKI,OACnCC,aAAa8C,QAAQ,mBAAmB,IAAIC,MAAOC,WACnDlC,EAASI,EAAM,CAAE+B,IAAKtD,EAAKsD,IAAKrB,KAAMjC,EAAKiC,SAEzCsB,QAAQC,IAAIxD,GARX,2CAAP,sDYN0C6I,CAAezG,EAAOC,EAAUJ,KAOhCQ,UAAU,eAA1C,UAEI,uBAAOiB,QAAQ,QAAf,uBACA,uBAAOjD,KAAK,OAAOwB,KAAK,OAAO0B,aAAa,MAAMC,SAAUrB,IAE5D,uBAAOmB,QAAQ,QAAf,mBACA,uBAAOjD,KAAK,QAAQwB,KAAK,QAAQ0B,aAAa,MAAMC,SAAUrB,IAE9D,uBAAOmB,QAAQ,QAAf,sBACA,uBAAOjD,KAAK,WAAWwB,KAAK,WAAW0B,aAAa,MAAMC,SAAUrB,EAASL,MAAOG,IAEpF,uBAAOqB,QAAQ,QAAf,sBACA,uBAAOjD,KAAK,WAAWwB,KAAK,YAAY0B,aAAa,MAAMC,SAAUrB,EAASL,MAAO0G,IAEpFvG,IAAauG,GAAa,mBAAGnG,UAAU,QAAb,oCAE3B,wBAAQhC,KAAK,SAAb,kBACA,mBAAGgC,UAAU,SAAb,SACI,cAAC,IAAD,CAAMoB,GAAG,QAAT,6BClCPiF,EAAY,WAEvB,IAAM3H,EAAWqB,cAFY,EAGL6B,aAAY,SAAAC,GAAK,OAAIA,EAAMC,eAA5C4D,EAHsB,EAGtBA,SAAU7E,EAHY,EAGZA,IAMjB,OAJA8E,qBAAU,WACRjH,EbyBF,uCAAO,WAAOA,GAAP,iBAAA4B,EAAA,sEACc5C,EAAc,cAD5B,cACC6C,EADD,gBAEcA,EAAKC,OAFnB,QAECjD,EAFD,QAGIkD,IACP7C,aAAa8C,QAAQ,QAASnD,EAAKI,OACnCC,aAAa8C,QAAQ,mBAAmB,IAAIC,MAAOC,WACnDlC,EAASI,EAAM,CAAE+B,IAAKtD,EAAKsD,IAAKrB,KAAMjC,EAAKiC,SAEzCd,EAAUG,KART,2CAAP,yDaxBG,CAACH,IAEDgH,EACM,4CAIP,cAAC,IAAD,UACE,8BACE,eAAC,IAAD,WACI,cAAC,EAAD,CACAY,OAAK,EACLC,KAAK,SACL/E,UAAW9B,EACX4B,kBAAmBT,IAEnB,cAAC,EAAD,CACAyF,OAAK,EACLC,KAAK,YACL/E,UAAW0E,EACX5E,kBAAmBT,IAEnB,cAAC,EAAD,CACAyF,OAAK,EACLC,KAAK,IACL/E,UAAWqE,EACXvE,kBAAmBT,IAEnB,cAAC,IAAD,CAAUO,GAAG,mB,0BC3CnBnC,GAAe,CACjByG,UAAU,GA4BC5D,GAxBK,WAAkC,IAAjCD,EAAgC,uDAAzB5C,GAAcuH,EAAW,uCACjD,OAAQA,EAAOxI,MACX,KAAKF,EACD,OAAO,2BACF+D,GADL,IAEE6D,UAAU,GACPc,EAAOrI,SAEhB,KAAKL,EACL,OAAO,2BACF+D,GADL,IAEE6D,UAAU,IAEZ,KAAK5H,EACH,MAAM,CACJ4H,UAAU,GAGd,QACI,OAAO7D,I,SCxBb5C,GAAe,CACnByG,UAAU,EACVlH,MAAO,IAyCMiH,GAtCK,WAAmC,IAAlC5D,EAAiC,uDAAzB5C,GAAcuH,EAAW,uCAEpD,OAAQA,EAAOxI,MAEb,KAAKF,EACH,OAAO,2BACF+D,GADL,IAEErD,MAAM,CAAEgI,EAAOrI,SAAV,oBAAqB0D,EAAMrD,UAGpC,KAAKV,EACH,OAAO,2BACF+D,GADL,IAEErD,MAAOqD,EAAMrD,MAAMuE,KAAI,SAAC3C,GAAD,OACrBA,EAAE+D,MAAQqC,EAAOrI,QAAQgG,IAAMqC,EAAOrI,QAAUiC,OAGtD,KAAKtC,EACH,OAAO,2BACF+D,GADL,IAEErD,MAAOqD,EAAMrD,MAAM+E,QAAO,SAACnD,GAAD,OAAQA,EAAE+D,MAAQqC,EAAOrI,QAAQG,QAG7D,KAAKR,EACH,OAAO,2BACF+D,GADL,IAEErD,MAAM,aAAKgI,EAAOrI,SAClBuH,UAAU,IAEZ,KAAK5H,EACH,OAAOmB,GAGb,QACE,OAAO4C,ICvCP5C,GAAe,CACjBgH,SAAS,GAiBED,GAdM,WAAkC,IAAjCnE,EAAgC,uDAAzB5C,GAAcuH,EAAW,uCAElD,OAAQA,EAAOxI,MACX,KAAKF,EACD,MAAO,CAACmI,SAAQ,GAEpB,KAAKnI,EACD,MAAO,CAACmI,SAAQ,GAEpB,QACI,OAAOpE,ICXN4E,GAAcC,aAAgB,CACvC5E,eACA2D,eACAO,kBCHEW,GAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,KAI9Ff,GAAQgB,aACWN,GACAE,GACIK,aAAgBC,QCErCC,GATH,WAER,OACI,cAAC,IAAD,CAAUnB,MAAOA,GAAjB,SACI,cAAC,EAAD,OCLZoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFxE,SAASyE,eAAe,W","file":"static/js/main.5b78abd3.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL\n\nconst fetchSinToken = (endpoint, data,method='GET') => {\n  const url =`${baseUrl}/${endpoint}`;\n  if(method==='GET'){\n      return fetch(url)\n  }else{\n      return fetch(url, {\n          method,\n          headers:{\n              'Content-type':'application/json'\n          },\n          body: JSON.stringify(data)\n      })\n  }\n}\n\nconst fetchConToken = (endpoint, data,method='GET') => {\n  const url =`${baseUrl}/${endpoint}`\n  const token = localStorage.getItem('token') || ''\n  if(method==='GET'){\n      return fetch(url,{\n         method,\n         headers: {\n             'x-token': token\n         } \n      })\n  }else{\n      return fetch(url, {\n          method,\n          headers:{\n              'Content-type':'application/json',\n              'x-token': token\n          },\n          body: JSON.stringify(data)\n      })\n  }\n}\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","\n\nexport const types = {\n\n   uiOpenModal:'[ui] Open Modal',\n   uiCloseModal:'[ui] Close Modal',\n   \n   taskLogout: '[task] Logout task clean',\n   taskStartAddNew: '[task] Start add new',\n   taskAddNew:'[task] Add new',\n   taskUpdated: '[task] task updated',\n   taskDeleted: '[task] task deleted',\n   taskLoaded: '[task] tasks loaded',\n\n   authCkeckingFinish: '[auth] checking finish login state',\n   authStartLogin: '[auth] Start login',\n   authLogin: '[auth] login',\n   authStartRegister: '[auth] Start Register',\n   authStartTokenRenew: '[auth] Start token renew',\n   authLogout: '[auth] Logout',\n\n   modalShow:'[modal] Show modal',\n   modalHide:'[modal] Hide modal',\n}","import { types } from '../types/types';\n\nexport const showModal = () => ({\n  type: types.modalShow\n})\n\nexport const hideModal = () => ({\n    type: types.modalHide\n});\n","import { types } from '../types/types';\nimport { fetchConToken } from '../helpers/fetch';\nimport { hideModal } from './modalActions';\n\n\nexport const taskStartAddNew = (task) => {\n  return async (dispatch, getState) => {\n    const { uid, name } = getState().authReducer;\n    dispatch(hideModal());\n    try {\n      const resp = await fetchConToken('tasks', task, 'POST');\n      const body = await resp.json();\n      if (body.ok) {\n        task._id = body.task._id;\n        task.user = {\n          _id: uid,\n          name,\n        };\n        dispatch(taskAddNew(task));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst taskAddNew = (task) => ({\n  type: types.taskAddNew,\n  payload: task,\n});\n\n\nexport const taskStartUpdate = (task,taskRef) => {\n\n  taskRef.current.querySelector('.loading').style.display = 'inherit';\n\n  return async (dispatch) => {\n    try {\n      const resp = await fetchConToken(`tasks/${task._id}`, task, 'PUT');\n      const body = await resp.json();\n      if (body.ok) {\n        dispatch(taskUpdated(task));\n        taskRef.current.querySelector('.loading').style.display = 'none';\n      } else {\n        console.log(body);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst taskUpdated = (task) => ({\n  type: types.taskUpdated,\n  payload: task,\n});\n\nexport const taskStartDelete = ( id) => {\n  return async (dispatch) => {\n\n    try {\n      const resp = await fetchConToken(`tasks/${id}`, {}, 'DELETE');\n      const body = await resp.json();\n      if (body.ok) {\n          dispatch(taskDeleted(id));\n      } else {\n        console.log(body);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst taskDeleted = (id) => ({\n  type: types.taskDeleted,\n  payload:{id}\n});\n\nexport const taskStartLoading = () => {\n  return async (dispatch) => {\n    try {\n      const resp = await fetchConToken('tasks');\n      const body = await resp.json();\n      const tasks = body.tasksList;\n      dispatch(taskLoaded(tasks));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst taskLoaded = (tasks) => ({\n  type: types.taskLoaded,\n  payload: tasks,\n});\n\nexport const taskLogout = () => ({\n  type: types.taskLogout,\n});","import { fetchSinToken, fetchConToken } from '../helpers/fetch';\nimport { types } from '../types/types';\nimport { taskLogout } from './taskActions';\n\nexport const startLogin = ( email, password ) => {\n    \n  return async (dispatch) => {\n    const resp = await fetchSinToken('auth', { email, password }, 'POST');\n    const body = await resp.json();\n    if (body.ok) {\n\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n      dispatch(\n          login({ uid: body.uid, name: body.name })\n      );\n\n    }else{\n        console.log(body);\n    }\n  };\n};\n\nexport const startRegister = ( email, password, name ) => {\n\n  return async(dispatch)=>{\n    const resp = await fetchSinToken('auth/new', { name, email, password }, 'POST');\n    const body = await resp.json();\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n      dispatch(login({ uid: body.uid, name: body.name }));\n    }else{\n        console.log(body);\n    }\n  }\n\n}\n\nexport const startChecking = () => {\n\n  return async (dispatch)=>{\n    const resp = await fetchConToken('auth/renew');\n    const body = await resp.json();\n    if (body.ok) {\n      localStorage.setItem('token', body.token);\n      localStorage.setItem('token-init-date', new Date().getTime());\n      dispatch(login({ uid: body.uid, name: body.name }));\n    }else{\n        dispatch( checkingFinish() );\n    }\n  }\n}\n\nexport const startLogout = () => {\n  return (dispatch)=>{\n    localStorage.clear()\n    dispatch(logout());\n    dispatch(taskLogout());\n  }\n}\n\nconst checkingFinish = () => ({\n  type: types.authCkeckingFinish\n})\n\nconst login = (user) => ({\n  type: types.authLogin,\n  payload: user,\n});\n\nconst logout = () => ({\n  type: types.authLogout\n})","import { useState } from 'react';\n\nconst useForm = (initialState = {})=>{\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = ()=>{\n        setValues(initialState);\n    }\n    const handleInputChange = ({target})=>{\n        setValues({\n            ...values,\n            [target.name]: target.value\n        })\n    }\n    return [values, handleInputChange, reset];\n}\n\nexport default useForm;","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { startLogin } from '../actions/authActions';\nimport useForm from '../hooks/useForm';\n\nconst LoginView = () => {\n    const [form, setForm] = useForm({\n        email:'ronald@deleon.com',\n        password:'clave01'\n    });\n    const dispatch = useDispatch();\n\n    const {email, password} = form;\n\n    const handleOnSubmit = (e)=>{\n        e.preventDefault();\n\n        dispatch( startLogin(email, password) )\n    }\n    return (\n        <div className=\"login\">\n            <img src=\"/assets/img/logo.png\" alt=\"Logo\"/>\n            <h1>Login</h1>\n            <form onSubmit={handleOnSubmit} className=\"formLogin\">\n\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" name=\"email\" autoComplete=\"off\" onChange={setForm} value={email} />\n\n                <label htmlFor=\"email\">Password</label>\n                <input type=\"password\" name=\"password\" autoComplete=\"off\" onChange={setForm} value={password} />\n\n                <button>Login</button>\n                <p className=\"btn-register\">or <Link to=\"register\">Create an account</Link></p>\n            </form>\n        </div>\n    )\n}\n\nexport default LoginView;\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\nexport const PublicRoute = ({isAuthenticated,component:Component,...rest}) => {\n\n    return (     \n       <Route {...rest} component={(props)=>(\n           (isAuthenticated)?(<Redirect to='/'/>):(<Component {...props} />)\n       )} />\n    )\n}\n\nPublicRoute.propTypes ={\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n\n","import { useDispatch, useSelector } from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport { startLogout } from '../actions/authActions';\n\nconst Navbar = () => {\n const dispatch = useDispatch();\n const {name} = useSelector(state => state.authReducer);\n\n const handleLogout = ()=>{\n    dispatch(startLogout());\n }\n\n    return (\n        <nav className=\"menu\">\n                <Link to=\"/login\" onClick={handleLogout} > ◅ Logout</Link>\n                👤 {name}\n        </nav>\n    )\n}\n\nexport default Navbar\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\nimport Navbar from '../componets/Navbar';\n\nexport const PrivateRoute = ({isAuthenticated,component:Component,...rest}) => {\n\n    localStorage.setItem('lastPath',rest.location.pathname)\n\n    return (   \n            <> \n               <Navbar />\n                <Route {...rest} component={(props)=>(\n                    (isAuthenticated)?(<Component {...props} />):(<Redirect to='/login'/>\n                    )\n                )} />\n          </>\n    )\n}\n\nPrivateRoute.propTypes ={\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { showModal } from '../actions/modalActions';\n\nconst Header = () => {\n    const dispatch = useDispatch();\n    const hanndleShowModalForm = ()=>{\n        dispatch(showModal());\n    }\n    return (\n        <header>\n            <h1>To Do</h1>\n            <button className=\"btn-add\" onClick={hanndleShowModalForm}>Add</button>\n        </header>\n    )\n}\n\nexport default Header;\n","\n\nexport const colors = ['#FF6633', '#FF33FF', '#FFFF99', '#999966', '#99FF99', '#B34D4D',\n'#80B300', '#809900', '#E6B3B3', '#6680B3', '#66991A', \n'#FF99E6', '#CCFF1A', '#FF1A66', '#E6331A', '#33FFCC',];\n\nexport const etiquetas = ['clock','home','work','warning'];","import { colors, etiquetas } from \"../utils/constants\";\nimport useForm from '../hooks/useForm';\nimport { useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { taskStartAddNew } from \"../actions/taskActions\";\nimport { hideModal } from \"../actions/modalActions\";\n\nconst Modal = () => {\n\n    const [form, setForm] = useForm();\n    const colorsContainer = useRef(null);\n    const tagsContainer = useRef(null);\n    const dispatch = useDispatch();\n    const {uid:user} =  useSelector(state=> state.authReducer);\n    \n    const deleteColorSelected = ()=>{\n        Array.from(document.querySelectorAll('.color')).map(c=>{\n            return c.style.border = 'none';\n        })\n    }  \n    const handleColorSelected = ({target})=>{\n        deleteColorSelected();\n        target.style.border ='3px solid lightgrey';\n    }\n    const handleEtiquetaSelected = ({target})=>{\n        !target.style.border ? \n        target.style.border ='3px solid lightgrey':\n        target.removeAttribute('style');\n    }\n    const getSelectedTags = ( container ) => {\n        return Array.from(container.querySelectorAll('img')).filter(img=>img.style.border !== '').map(img => img.getAttribute('icono')).toString();\n\n    }\n    const getSeletedColor = ( container )=>{\n        return Array.from(container.children).filter(div=>div.style.border !== 'none' && div.style.border !== '')[0]?.style.background;\n    }\n    const handleAddTask = (e)=>{\n        e.preventDefault();\n\n        const etiquetas = getSelectedTags( tagsContainer.current );\n        const color = getSeletedColor( colorsContainer.current )|| '#1f999a';\n        const dataForm = {...form,etiquetas, color,completed:false, user }; \n        \n        dispatch( taskStartAddNew(dataForm) );\n    }\n\n    const handleHideModal  = ()=>dispatch(hideModal());\n\n    return (\n        <div className=\"modal\">\n            <div className=\"modal-body\">\n                <form id=\"form-task\" onSubmit={handleAddTask}>\n                    <div className=\"modal-header\">\n                        <h2 className=\"modal-title\">Add task</h2>\n                        <div className=\"colors\" ref={colorsContainer}>\n                            {colors.map(color=><div key={color} onClick={handleColorSelected} className=\"color\" style={{background: color}}></div>)}\n                        </div>\n                    </div>\n                        <input type=\"hidden\" name=\"color\" onChange={setForm} />\n                        <input type=\"hidden\" name=\"etiquetas\" onChange={setForm} />\n                        <input type=\"text\" placeholder=\"Write title\" name=\"title\" onChange={setForm} required />\n                        <input type=\"date\" name=\"date\" required onChange={setForm} />\n                        <input type=\"time\" name=\"time\" required onChange={setForm} />\n                        <textarea name=\"description\" id=\"\" cols=\"30\" rows=\"5\" placeholder=\"Description\" onChange={setForm} required></textarea>                    \n                        <div className=\"select-etiquetas\" ref={tagsContainer}>\n                            <h3 className=\"title-eti\">Hashtag </h3>\n\n                            {etiquetas.map(eti =>( <div key={eti} className=\"eti\">\n                                                        <img icono={eti} src={`assets/img/${eti}.png`} onClick={handleEtiquetaSelected} alt=\"\" />\n                                                    </div>)\n                            )}\n\n                        </div>\n                        <div className=\"modal-btns\">\n                            <button onClick={handleHideModal}  type='button' className=\"btn-cancel\">Cancel</button>\n                            <button className=\"btn-save\">Save</button>\n                        </div>\n                    </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Modal;\n","import { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\"\nimport { taskStartDelete, taskStartUpdate } from \"../actions/taskActions\";\n\n\nconst Task = ({task:{ _id,color,etiquetas,title,description,date,time,completed }, task}) => {\n    \n    const dispatch = useDispatch();\n    const taskElement = useRef(null);\n    const loadingRef = useRef(null);\n\n    const handleDeleteTask = ()=>{\n        loadingRef.current.style.display = 'inherit';\n        dispatch( taskStartDelete( _id,taskElement ) );\n    }\n    const handleTaskCompleted = ()=>{\n        dispatch( taskStartUpdate({...task,completed:!completed},taskElement) );\n    }\n\n    return (\n        <div ref={taskElement} className=\"task\" style={{background: color}} >\n                        <div className=\"header\">\n                            <span className=\"date\">{date} - {time}</span>\n                            <label className=\"switch\">\n                                <input type=\"checkbox\" checked={completed} onChange={handleTaskCompleted} />\n                                <span className=\"slider round\"></span>\n                            </label>\n                        </div>\n                        <div className=\"body\">\n                            <h3 className=\"title\">{title}</h3>\n                            <p className=\"descripcion\">{description}</p>\n                        </div>\n                        <div className=\"footer\">\n                            <div className=\"etiquetas\">\n                                {\n                                    etiquetas.split(',').map(e=><div key={e} className=\"etiqueta\"><img className=\"icon-delete\" src={`assets/img/${e}.png`} alt=\"\" /></div>)\n                                }\n                            </div>\n                            <button className=\"btn-delete\" onClick={handleDeleteTask}>\n                                <img className=\"icon-delete\" src=\"assets/img/delete.png\" alt=\"\" />\n                            </button>\n                        </div>\n                        <div ref={loadingRef} className=\"loading\">Espere...</div>\n                </div>\n    )\n}\n\nexport default Task\n","import {useEffect} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { taskStartLoading } from '../actions/taskActions';\nimport Task from './Task';\n\nconst TasksList = () => {\n\n    const dispatch = useDispatch();\n    const {tasks, checking} = useSelector(state=>state.taskReducer);\n    useEffect(() => {\n        dispatch( taskStartLoading() )\n    }, [dispatch]);\n\n\n    return (\n        <section className=\"container\">\n                <div className=\"list\">\n                    {tasks[0] ? tasks.map(task=> <Task key={task._id} task={task} />):<p className=\"msj-empty\">Add a task  📝</p>}\n                    {checking && <p>Loading tasks...</p>}\n                    \n                </div>\n        </section>\n    )\n}\n\nexport default TasksList;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Header from '../componets/Header';\nimport Modal from '../componets/modal';\nimport TasksList from '../componets/TasksList';\n\nconst HomeView = props => {\n\n    const {visible:showModal} = useSelector(store=>store.modalReducer);\n\n    return (\n        <>\n            <section>\n                <Header />\n                <TasksList />\n            </section>\n            {showModal && <Modal />}\n        </>\n    )\n}\n\nexport default HomeView;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { startRegister } from '../actions/authActions';\nimport useForm from '../hooks/useForm';\n\nconst RegisterView = () => {\n    const [form, setForm] = useForm({\n        name:'',\n        email:'',\n        password:'',\n        password2:''\n    });\n    const dispatch = useDispatch();\n\n    const { name, email, password, password2 } = form;\n\n    const handleOnSubmit = (e)=>{\n        e.preventDefault();\n        password === password2 && dispatch( startRegister( email, password, name ) )\n            \n    }\n    return (\n        <div className=\"register\">\n            <img src=\"/assets/img/logo.png\" alt=\"Logo\"/>\n            <h1>Register</h1>\n            <form onSubmit={handleOnSubmit} className=\"formRegister\">\n\n                <label htmlFor=\"email\">Full name</label>\n                <input type=\"text\" name=\"name\" autoComplete=\"off\" onChange={setForm} />\n\n                <label htmlFor=\"email\">Email</label>\n                <input type=\"email\" name=\"email\" autoComplete=\"off\" onChange={setForm} />\n\n                <label htmlFor=\"email\">Password</label>\n                <input type=\"password\" name=\"password\" autoComplete=\"off\" onChange={setForm} value={password} />\n\n                <label htmlFor=\"email\">Password</label>\n                <input type=\"password\" name=\"password2\" autoComplete=\"off\" onChange={setForm} value={password2} />\n\n                {password !== password2 && <p className=\"alert\">Passwords do not match</p>}\n\n                <button type=\"submit\">Save</button>\n                <p className=\"cancel\">\n                    <Link to=\"login\">Cancel</Link>\n                </p>\n            </form>\n        </div>\n    )\n}\n\nexport default RegisterView;\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\nimport  LoginView  from '../pages/LoginView';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startChecking } from '../actions/authActions';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\nimport HomeView from '../pages/HomeView';\nimport RegisterView from '../pages/RegisterView';\n\nexport const AppRouter = () => {\n\n  const dispatch = useDispatch()\n  const {checking, uid} = useSelector(state => state.authReducer)\n\n  useEffect(() => {\n    dispatch(startChecking())\n  }, [dispatch])\n\n  if(checking){\n    return <h5> Espere...</h5>\n  }\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n            <PublicRoute \n            exact\n            path='/login'\n            component={LoginView}\n            isAuthenticated={!!uid}\n            />\n            <PublicRoute \n            exact\n            path='/register'\n            component={RegisterView}\n            isAuthenticated={!!uid}\n            />            \n            <PrivateRoute \n            exact\n            path='/'\n            component={HomeView}\n            isAuthenticated={!!uid}\n            />\n            <Redirect to='/login' />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import { types } from '../types/types';\n\nconst initialState = {\n    checking: true\n}\n\n\nconst authReducer = (state= initialState, action) => {\n    switch (action.type) {\n        case types.authLogin:\n            return {\n              ...state,\n              checking: false,\n              ...action.payload\n            }\n        case types.authCkeckingFinish:\n        return {\n          ...state,\n          checking: false\n        }\n        case types.authLogout:\n          return{\n            checking: false\n          }\n    \n        default:\n            return state;\n    }\n  }\n\n\nexport default authReducer;","import { types } from '../types/types';\n\nconst initialState = {\n  checking: true,\n  tasks: [],\n};\n\nconst taskReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n\n    case types.taskAddNew:\n      return {\n        ...state,\n        tasks: [action.payload,...state.tasks ],\n      };\n\n    case types.taskUpdated:\n      return {\n        ...state,\n        tasks: state.tasks.map((e) =>\n          e._id === action.payload._id ? action.payload : e\n        ),\n      };\n    case types.taskDeleted:\n      return {\n        ...state,\n        tasks: state.tasks.filter((e) =>( e._id !== action.payload.id)\n        )\n      };\n      case types.taskLoaded:\n        return {\n          ...state,\n          tasks: [...action.payload],\n          checking: false\n        }\n        case types.taskLogout:\n          return initialState       \n\n\n    default:\n      return state;\n  }\n};\n\nexport default taskReducer;","import { types } from '../types/types';\n\nconst initialState = {\n    visible: false\n}\n\nconst modalReducer = (state= initialState, action) => {\n    \n    switch (action.type) {\n        case types.modalShow:\n            return {visible:true};\n\n        case types.modalHide:\n            return {visible:false};\n\n        default:\n            return state;\n    }\n  }\n\nexport default modalReducer;","import {combineReducers} from 'redux';\nimport authReducer from './authRedecer';\nimport taskReducer from './taskReducer';\nimport modalReducer from './modalReducer';\n\nexport const rootReducer = combineReducers({\n    authReducer,\n    taskReducer,\n    modalReducer\n})","import {applyMiddleware, createStore, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { rootReducer } from '../reducers/rootReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n\n\nexport const store = createStore(\n                                rootReducer, \n                                composeEnhancers(\n                                    applyMiddleware(thunk)\n                                ) \n);\n\n","import {Provider} from 'react-redux';\nimport {AppRouter} from './routers/AppRouter';\nimport './styles/app.css';\nimport { store } from './redux/storeRedux';\n\nconst App = () => {\n\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}